{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Portworx stack on CoreOS.   01/18/2017",
  "Mappings": {
    "RegionMap": {
      "eu-central-1": {
        "AMI": "ami-6b478504"
      },
      "ap-northeast-1": {
        "AMI": "ami-418afb26"
      },
      "us-gov-west-1": {
        "AMI": "ami-2c61da4d"
      },
      "ap-northeast-2": {
        "AMI": "ami-1109df7f"
      },
      "ca-central-1": {
        "AMI": "ami-0319ab67"
      },
      "ap-south-1": {
        "AMI": "ami-d76e18b8"
      },
      "sa-east-1": {
        "AMI": "ami-b41b80d8"
      },
      "ap-southeast-2": {
        "AMI": "ami-47505524"
      },
      "ap-southeast-1": {
        "AMI": "ami-57f05834"
      },
      "us-east-1": {
        "AMI": "ami-39302b2e"
      },
      "us-east-2": {
        "AMI": "ami-b8e2b8dd"
      },
      "us-west-2": {
        "AMI": "ami-c177c7a1"
      },
      "us-west-1": {
        "AMI": "ami-4f6f3f2f"
      },
      "eu-west-1": {
        "AMI": "ami-70694703"
      },
      "eu-west-2": {
        "AMI": "ami-5ffdf73b"
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "Description": "EC2 HVM instance type (m3.medium, etc).",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 HVM instance type."
    },
    "ClusterSize": {
      "Default": "3",
      "MinValue": "3",
      "MaxValue": "127",
      "Description": "Number of nodes in cluster (3-127).",
      "Type": "Number"
    },
    "VolumeSize": {
      "Description": "Size in GB of additional non-root volume",
      "Type": "String",
      "Default": "128",
      "AllowedValues": [
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096"
      ]
    },
    "DiscoveryURL": {
      "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new?size=<your cluster size>",
      "Type": "String"
    },
    "AllowSSHFrom": {
      "Description": "The net block (CIDR) that SSH is available to.",
      "Default": "0.0.0.0/0",
      "Type": "String"
    },
    "KeyPair": {
      "Description": "The name of an EC2 Key Pair to allow SSH access to the instance.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Resources": {
    "PortworxSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Portworx SecurityGroup",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "AllowSSHFrom"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "c0fb554a-6d51-4a18-b6a1-a2b81d779e95"
        }
      }
    },
    "Ingress4001": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "4001",
        "ToPort": "4001",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "Ingress2379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "2379",
        "ToPort": "2379",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "Ingress2380": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "2380",
        "ToPort": "2380",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "Ingress9001": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "9001",
        "ToPort": "9001",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "Ingress9002": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "9002",
        "ToPort": "9002",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "Ingress9003": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "PortworxSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "9003",
        "ToPort": "9003",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PortworxSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "PortworxServerAutoScale": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "PortworxServerLaunchConfig"
        },
        "MinSize": "3",
        "MaxSize": "127",
        "DesiredCapacity": {
          "Ref": "ClusterSize"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            },
            "PropagateAtLaunch": true
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d4a7eb53-d4ff-4056-a960-8acda0fe1549"
        }
      }
    },
    "PortworxServerLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "SecurityGroups": [
          {
            "Ref": "PortworxSecurityGroup"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "VolumeSize": {
                "Ref": "VolumeSize"
              },
              "DeleteOnTermination": "true"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config\n\n",
                "coreos:\n",
                "  update:\n",
                "     reboot-strategy: off\n",
                "  etcd2:\n",
                "    discovery: ",
                {
                  "Ref": "DiscoveryURL"
                },
                "\n",
                "    advertise-client-urls: http://$private_ipv4:2379\n",
                "    initial-advertise-peer-urls: http://$private_ipv4:2380\n",
                "    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n",
                "    listen-peer-urls: http://$private_ipv4:2380\n",
                "  units:\n",
                "    - name: etcd2.service\n",
                "      command: start\n",
                "    - name: fleet.service\n",
                "      command: start\n",
                "    - name: portworx.service\n",
                "      command: start\n",
                "      content: |\n",
                "         [Unit]\n",
                "         Description=Portworx Container\n",
		"         Wants=docker.service\n",
		"         After=docker.service\n",
		"         [Service]\n",
		"         Restart=always\n",
		"         TimeoutSec=0\n",
		"         ExecStartPre=/usr/bin/bash -c \"/usr/bin/systemctl set-environment HOSTDIR=`if uname -r | grep -i coreos > /dev/null; then echo /lib/modules; else echo /usr/src; fi`\"\n",
		"         ExecStartPre=-/usr/bin/docker stop %n\n",
		"         ExecStartPre=-/usr/bin/docker rm -f %n\n",
		"         ExecStart=/usr/bin/docker run --net=host --privileged=true \\\n",
		"                --cgroup-parent=/system.slice/portworx.service      \\\n",
		"                -v /run/docker/plugins:/run/docker/plugins          \\\n",
		"                -v /var/lib/osd:/var/lib/osd:shared                 \\\n",
		"                -v /dev:/dev                                        \\\n",
		"                -v /etc/pwx:/etc/pwx                                \\\n",
		"                -v /opt/pwx/bin:/export_bin:shared                  \\\n",
		"                -v /var/run/docker.sock:/var/run/docker.sock        \\\n",
		"                -v /var/cores:/var/cores                            \\\n",
		"                -v ${HOSTDIR}:${HOSTDIR}                            \\\n",
		"                --name=%n                                           \\\n",
		"                portworx/px-enterprise -s /dev/xvdb -d eth0 -m eth0 -k etcd://127.0.0.1:2379 -c px-cluster-coreos\n",
		"         KillMode=control-group\n",
		"         ExecStop=/usr/bin/docker stop -t 10 %n\n",
		"         [Install]\n",
		"         WantedBy=multi-user.target\n"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6b1067dd-cb21-4b9f-ae0e-0c3b65653835"
        }
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "c0fb554a-6d51-4a18-b6a1-a2b81d779e95": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "6b1067dd-cb21-4b9f-ae0e-0c3b65653835": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "c0fb554a-6d51-4a18-b6a1-a2b81d779e95"
        ]
      },
      "d4a7eb53-d4ff-4056-a960-8acda0fe1549": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "6b1067dd-cb21-4b9f-ae0e-0c3b65653835"
        ]
      }
    }
  }
}
